// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id Int         @id @default(autoincrement())
  username String @unique
  displayName String
  phoneNumber String @unique
  dob DateTime
  email String @unique
  password String
  profilePicture ProfilePicture?
  bio String?
  toots Toot[]
  followers User[] @relation("FollowRelation")
  following User[] @relation("FollowRelation")
  isVerified Boolean @default(false)
  likes Like[]
  comments Comment[]
  retoots Retoot[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model ProfilePicture {
  id Int @id @default(autoincrement())
  url String
  fileName String
  user User @relation(fields: [userId], references: [id])
  userId Int @unique
}

model Toot {
  id Int       @id @default(autoincrement())
  content String
  sensitiveContent Boolean?
  media_ids TootMedia[]
  author User   @relation(fields : [authorId], references : [id])
  authorId Int
  likes Like[]
  comments Comment[]
  retoots Retoot[]
  visibility String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}



model Like {
  id Int   @id @default(autoincrement())
  user User @relation(fields : [userId], references : [id])
  userId Int
  toot Toot @relation(fields : [tootId], references : [id])
  tootId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Comment {
  id Int     @id @default(autoincrement())
  content String
  author User @relation(fields : [authorId], references : [id])
  authorId Int
  toot Toot @relation(fields : [tootId], references : [id])
  tootId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}

model Retoot {
  id Int     @id @default(autoincrement())
  toot Toot @relation(fields : [tootId], references : [id])
  tootId Int
  user User @relation(fields : [userId], references : [id])
  userId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model TootMedia {
  id Int   @id @default(autoincrement())
  url String
  type String
  toot Toot @relation(fields : [tootId], references : [id])
  tootId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}